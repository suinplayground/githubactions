name: ðŸŽ¡ ci
on:
  push:
    branches: [main]
  pull_request:
  workflow_dispatch:
concurrency: ci-${{ github.ref }} # to prevent collisions on the release job
jobs:
  debug:
    runs-on: ubuntu-latest
    steps:
      - name: machine echo github1
        env: { CONTENT: "${{ toJson(github) }}" }
        run: "echo $CONTENT"
      - if: github.ref_name == 'main' && github.ref_type == 'branch'
        run: true
      - run: env
        env:
          GIT_AUTHOR_NAME: ${{ github.event.pusher.name }}
          GIT_AUTHOR_EMAIL: ${{ github.event.pusher.email }}
          GIT_COMMITTER_NAME: github-actions[bot]
          GIT_COMMITTER_EMAIL: github-actions[bot]@users.noreply.github.com
#  commitlint:
#    name: ðŸ–‹ commitlint
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v2
#        with:
#          fetch-depth: 0 # get all git history, commitlint needs full history
#      - uses: ./.github/actions/setup_yarn
#      - if: github.repository == 'suin/semantic-release'
#        run: yarn build
#      - if: github.event_name == 'pull_request'
#        run: yarn commitlint --from ${{ github.event.pull_request.base.sha }} --to ${{ github.event.pull_request.head.sha }} --verbose
#      - if: github.event_name == 'push'
#        run: yarn commitlint --from ${{ github.after }} --verbose
#  typecheck:
#    name: ðŸ”¬ typecheck
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v2
#      - uses: ./.github/actions/setup_yarn
#      - run: yarn typecheck
#  lint:
#    name: ðŸ§µ lint
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v2
#      - uses: ./.github/actions/setup_yarn
#      - run: yarn lint
#  test:
#    name: ðŸ’¯ test
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v2
#      - uses: ./.github/actions/setup_yarn
#      - run: yarn test
#  release:
#    name: ðŸš€ release
#    needs: [commitlint, typecheck, lint, test]
#    if: github.ref_name == 'main' github.ref_type == 'branch' # since we only want to release on main branch
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v2
#      - uses: ./.github/actions/setup_yarn
#      - run: yarn build
#      - run: yarn release
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
